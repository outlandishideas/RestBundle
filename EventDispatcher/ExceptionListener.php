<?php


namespace Outlandish\RestBundle\EventDispatcher;


use Symfony\Component\Debug\Exception\FlattenException;
use Symfony\Component\HttpFoundation\JsonResponse;
use Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent;
use Symfony\Component\HttpKernel\Kernel;

/**
 * Convert exceptions to JSON
 */
class ExceptionListener {

	public function __construct(Kernel $kernel) {
		$this->kernel = $kernel;
	}

	/**
	 * Return array of JSON encoded exceptions
	 *
	 * @param GetResponseForExceptionEvent $event
	 */
	public function onKernelException(GetResponseForExceptionEvent $event) {
		$controller = $event->getRequest()->attributes->get('_controller');

		//check if the exception was generated by this bundle
		if (substr($controller, 0, strrpos($controller, '\\')) == 'Outlandish\\RestBundle\\Controller') {
			$data = FlattenException::create($event->getException())->toArray();
			if ($this->kernel->isDebug()) {
				foreach ($data as $i => $exception) {
					unset($data[$i]['trace']);
					unset($data[$i]['class']);
				}
			}
			$event->setResponse(new JsonResponse($data));
		}
	}

} 